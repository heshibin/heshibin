"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9535],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),s=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,g=c["".concat(m,".").concat(d)]||c[d]||u[d]||l;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8898:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={title:"mxGraph\u5bfc\u51fasvg\u56fe\u5f62",description:"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7mxXmlUtils.parseXml\u5c06xml\u8f6c\u6362\u4e3asvg\u3002",date:new Date("2023-01-29T00:00:00.000Z"),authors:"heshibin",tags:["java"]},i=void 0,o={permalink:"/blog/mxGraph\u5bfc\u51fasvg\u56fe\u5f62",editUrl:"https://github.com/heshibin/heshibin.github.io/edit/main/blog/mxGraph\u5bfc\u51fasvg\u56fe\u5f62.md",source:"@site/blog/mxGraph\u5bfc\u51fasvg\u56fe\u5f62.md",title:"mxGraph\u5bfc\u51fasvg\u56fe\u5f62",description:"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7mxXmlUtils.parseXml\u5c06xml\u8f6c\u6362\u4e3asvg\u3002",date:"2023-01-29T00:00:00.000Z",formattedDate:"January 29, 2023",tags:[{label:"java",permalink:"/blog/tags/java"}],readingTime:2.115,hasTruncateMarker:!1,authors:[{name:"heshibin",title:"cv\u6478\u9c7c\u5927\u5e08",url:"https://github.com/heshibin",email:"17608484341@163.com",imageURL:"https://avatars.githubusercontent.com/u/49633468?s=400&u=e1850391be1aa0356c3ae4202a8e8b8018c584d0&v=4",key:"heshibin"}],frontMatter:{title:"mxGraph\u5bfc\u51fasvg\u56fe\u5f62",description:"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7mxXmlUtils.parseXml\u5c06xml\u8f6c\u6362\u4e3asvg\u3002",date:"2023-01-29T00:00:00.000Z",authors:"heshibin",tags:["java"]},prevItem:{title:"\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898-KMP\u7b97\u6cd5",permalink:"/blog/\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898-KMP\u7b97\u6cd5"},nextItem:{title:"mysql\u8fdc\u7a0b\u8fde\u63a5\u95ee\u9898 is not allowed to connect to this MySQL server",permalink:"/blog/mysql\u8fdc\u7a0b\u8fde\u63a5\u95ee\u9898"}},m={authorsImageUrls:[void 0]},s=[{value:"\u524d\u7aef",id:"\u524d\u7aef",level:4},{value:"\u540e\u7aef",id:"\u540e\u7aef",level:4}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"mxXmlUtils.parseXml"),"\u5c06xml\u8f6c\u6362\u4e3asvg\u3002"),(0,a.kt)("h4",{id:"\u524d\u7aef"},"\u524d\u7aef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var encoder = new mxCodec(mxUtils.createXmlDocument());\nvar node = encoder.encode(graph.getModel());\nvar xml = mxUtils.getPrettyXml(node);\nconsole.log(encodeURIComponent(xml));\nnew mxXmlRequest(\"\u540e\u7aef\u5730\u5740\", 'xml=' + encodeURIComponent(xml))\n    .simulate(document, '_blank');\n")),(0,a.kt)("h4",{id:"\u540e\u7aef"},"\u540e\u7aef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public void exportNode(@RequestParam(value = "xml") String xml,\n                           HttpServletResponse response) {\n    try {\n        xml = URLDecoder.decode(xml);\n\n        if (StringUtils.contains(xml, "&amp;apos;")) {\n            xml = xml.replaceAll("&amp;apos;", "\'");\n        }\n        if (StringUtils.contains(xml, "&quot;")) {\n            xml = xml.replaceAll("&quot;", "\\"");\n        }\n        if (StringUtils.contains(xml, "&lt;")) {\n            xml = xml.replaceAll("&lt;", "<");\n        }\n        if (StringUtils.contains(xml, "&gt;")) {\n            xml = xml.replaceAll("&gt;", ">");\n        }\n\n        mxGraph graph = new mxGraph();\n        Document doc = com.mxgraph.util.mxXmlUtils.parseXml(xml);\n        mxCodec codec = new mxCodec(doc);\n        codec.decode(doc.getDocumentElement(), graph.getModel());\n\n        // Renders graph to SVG\n        mxSvgCanvas canvas = (mxSvgCanvas) mxCellRenderer.drawCells(graph,\n                null, 1, null, new mxCellRenderer.CanvasFactory()\n                {\n                    public mxICanvas createCanvas(int width, int height)\n                    {\n                        return new mxSvgCanvas(com.mxgraph.util.mxDomUtils\n                                .createSvgDocument(width, height));\n                    }\n                });\n\n        String tmp = System.getProperty("java.io.tmpdir");\n        SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");\n        String fileName = df.format(new Date()) + ".svg";\n        String filePath = tmp +"/"+ fileName;\n        com.mxgraph.util.mxUtils.writeFile(com.mxgraph.util.mxXmlUtils.getXml(canvas.getDocument()), filePath);\n\n\n        InputStream fis = null;\n        OutputStream outputStream = null;\n        try {\n            File file = new File(filePath);\n            // \u5b9a\u4e49\u6587\u4ef6\u7684\u8f93\u5165\u6d41\n            fis = new BufferedInputStream(new FileInputStream(new File(filePath)));\n            // \u5b9a\u4e49\u4e00\u4e2a\u7f13\u51b2\u533a\n            byte[] buffer = new byte[fis.available()];\n            // \u628a\u6d41\u5199\u5165byte\u7f13\u51b2\u533a\n            fis.read(buffer);\n            // \u5173\u95ed\u6587\u4ef6\u6d41\n            fis.close();\n            // \u6e05\u7a7aresponse\n            response.reset();\n            // \u8bbe\u7f6eresponse\u7684Header\n            // \u9632\u6b62\u4e2d\u6587\u4e71\u7801\n            String finalFileName = new String(fileName.getBytes("GBK"), "ISO8859-1");\n            // \u8bbe\u503c\u8fd4\u56de\u6587\u4ef6\u5c5e\u6027\uff0c\u6d4f\u89c8\u5668\u4f1a\u6839\u636e\u5c5e\u6027\u8c03\u7528\u4e0b\u8f7d\u6587\u4ef6\u65b9\u6cd5\n            response.addHeader("Content-Disposition", "attachment;filename=" + finalFileName);\n            // \u8bbe\u503c\u6587\u4ef6\u5927\u5c0f\u5c5e\u6027\uff0c\u6d4f\u89c8\u5668\u7528\u4e8e\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5199\u5b8c\n            response.addHeader("Content-Length", "" + file.length());\n//                // \u524d\u7aef\u83b7\u53d6\u6587\u4ef6\u540d\uff0c\u9700\u8981\u89e3\u7801\n//                response.addHeader("downLoadName", URLEncoder.encode(fileName, "UTF-8"));\n            // \u5b9a\u4e49\u8f93\u51fa\u6d41\n            outputStream = new BufferedOutputStream(response.getOutputStream());\n            // \u5b9a\u4e49\u8f93\u51fa\u7c7b\u578b\u4e3a\u4e8c\u8fdb\u5236\u6d41\u8f93\u51fa\n            response.setContentType("application/octet-stream");\n            // \u628a\u6d41\u5199\u5165response\n            outputStream.write(buffer);\n            // flush\u843d\u76d8\n            outputStream.flush();\n            // \u5173\u95ed\u8f93\u51fa\u6d41\n            outputStream.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (fis != null) {\n                fis.close();\n            }\n            if (outputStream != null) {\n                outputStream.close();\n            }\n        }\n//            BufferedImage image = ImageIO.read(new File(filePath));\n//            ImageIO.write(image, "svg", response.getOutputStream());\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}\n')))}c.isMDXComponent=!0}}]);