"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3542],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),s=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(m.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(t),d=a,f=c["".concat(m,".").concat(d)]||c[d]||u[d]||l;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var m in n)hasOwnProperty.call(n,m)&&(i[m]=n[m]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},98170:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const l={title:"mxGraph\u5bfc\u51fasvg\u56fe\u5f62",description:"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7mxXmlUtils.parseXml\u5c06xml\u8f6c\u6362\u4e3asvg\u3002",keywords:["mxGraph"],date:new Date("2023-01-29T00:00:00.000Z"),authors:"heshibin",tags:["java"]},o=void 0,i={unversionedId:"\u524d\u7aef/mxGraph\u5bfc\u51fasvg\u56fe\u5f62",id:"\u524d\u7aef/mxGraph\u5bfc\u51fasvg\u56fe\u5f62",title:"mxGraph\u5bfc\u51fasvg\u56fe\u5f62",description:"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7mxXmlUtils.parseXml\u5c06xml\u8f6c\u6362\u4e3asvg\u3002",source:"@site/docs/\u524d\u7aef/mxGraph\u5bfc\u51fasvg\u56fe\u5f62.md",sourceDirName:"\u524d\u7aef",slug:"/\u524d\u7aef/mxGraph\u5bfc\u51fasvg\u56fe\u5f62",permalink:"/docs/\u524d\u7aef/mxGraph\u5bfc\u51fasvg\u56fe\u5f62",draft:!1,editUrl:"https://github.com/heshibin/heshibin.github.io/edit/main/docs/\u524d\u7aef/mxGraph\u5bfc\u51fasvg\u56fe\u5f62.md",tags:[{label:"java",permalink:"/docs/tags/java"}],version:"current",frontMatter:{title:"mxGraph\u5bfc\u51fasvg\u56fe\u5f62",description:"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7mxXmlUtils.parseXml\u5c06xml\u8f6c\u6362\u4e3asvg\u3002",keywords:["mxGraph"],date:"2023-01-29T00:00:00.000Z",authors:"heshibin",tags:["java"]},sidebar:"tutorialSidebar",previous:{title:"\u7eafjs\u9f20\u6807\u70b9\u51fb\u7279\u6548",permalink:"/docs/\u524d\u7aef/javascript/\u9f20\u6807\u70b9\u51fb\u7279\u6548"},next:{title:"nvm\u5e38\u7528\u547d\u4ee4",permalink:"/docs/\u524d\u7aef/nvm\u5e38\u7528\u547d\u4ee4"}},m={},s=[{value:"\u524d\u7aef",id:"\u524d\u7aef",level:4},{value:"\u540e\u7aef",id:"\u540e\u7aef",level:4}],p={toc:s};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u5148\u83b7\u53d6mxGraph\u8282\u70b9\u6570\u636e\uff0c\u4e5f\u5c31\u662fxml\u4fe1\u606f\uff0c\u5728\u540e\u7aef\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"mxXmlUtils.parseXml"),"\u5c06xml\u8f6c\u6362\u4e3asvg\u3002"),(0,a.kt)("h4",{id:"\u524d\u7aef"},"\u524d\u7aef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var encoder = new mxCodec(mxUtils.createXmlDocument());\nvar node = encoder.encode(graph.getModel());\nvar xml = mxUtils.getPrettyXml(node);\nconsole.log(encodeURIComponent(xml));\nnew mxXmlRequest(\"\u540e\u7aef\u5730\u5740\", 'xml=' + encodeURIComponent(xml))\n    .simulate(document, '_blank');\n")),(0,a.kt)("h4",{id:"\u540e\u7aef"},"\u540e\u7aef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public void exportNode(@RequestParam(value = "xml") String xml,\n                           HttpServletResponse response) {\n    try {\n        xml = URLDecoder.decode(xml);\n\n        if (StringUtils.contains(xml, "&amp;apos;")) {\n            xml = xml.replaceAll("&amp;apos;", "\'");\n        }\n        if (StringUtils.contains(xml, "&quot;")) {\n            xml = xml.replaceAll("&quot;", "\\"");\n        }\n        if (StringUtils.contains(xml, "&lt;")) {\n            xml = xml.replaceAll("&lt;", "<");\n        }\n        if (StringUtils.contains(xml, "&gt;")) {\n            xml = xml.replaceAll("&gt;", ">");\n        }\n\n        mxGraph graph = new mxGraph();\n        Document doc = com.mxgraph.util.mxXmlUtils.parseXml(xml);\n        mxCodec codec = new mxCodec(doc);\n        codec.decode(doc.getDocumentElement(), graph.getModel());\n\n        // Renders graph to SVG\n        mxSvgCanvas canvas = (mxSvgCanvas) mxCellRenderer.drawCells(graph,\n                null, 1, null, new mxCellRenderer.CanvasFactory()\n                {\n                    public mxICanvas createCanvas(int width, int height)\n                    {\n                        return new mxSvgCanvas(com.mxgraph.util.mxDomUtils\n                                .createSvgDocument(width, height));\n                    }\n                });\n\n        String tmp = System.getProperty("java.io.tmpdir");\n        SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");\n        String fileName = df.format(new Date()) + ".svg";\n        String filePath = tmp +"/"+ fileName;\n        com.mxgraph.util.mxUtils.writeFile(com.mxgraph.util.mxXmlUtils.getXml(canvas.getDocument()), filePath);\n\n\n        InputStream fis = null;\n        OutputStream outputStream = null;\n        try {\n            File file = new File(filePath);\n            // \u5b9a\u4e49\u6587\u4ef6\u7684\u8f93\u5165\u6d41\n            fis = new BufferedInputStream(new FileInputStream(new File(filePath)));\n            // \u5b9a\u4e49\u4e00\u4e2a\u7f13\u51b2\u533a\n            byte[] buffer = new byte[fis.available()];\n            // \u628a\u6d41\u5199\u5165byte\u7f13\u51b2\u533a\n            fis.read(buffer);\n            // \u5173\u95ed\u6587\u4ef6\u6d41\n            fis.close();\n            // \u6e05\u7a7aresponse\n            response.reset();\n            // \u8bbe\u7f6eresponse\u7684Header\n            // \u9632\u6b62\u4e2d\u6587\u4e71\u7801\n            String finalFileName = new String(fileName.getBytes("GBK"), "ISO8859-1");\n            // \u8bbe\u503c\u8fd4\u56de\u6587\u4ef6\u5c5e\u6027\uff0c\u6d4f\u89c8\u5668\u4f1a\u6839\u636e\u5c5e\u6027\u8c03\u7528\u4e0b\u8f7d\u6587\u4ef6\u65b9\u6cd5\n            response.addHeader("Content-Disposition", "attachment;filename=" + finalFileName);\n            // \u8bbe\u503c\u6587\u4ef6\u5927\u5c0f\u5c5e\u6027\uff0c\u6d4f\u89c8\u5668\u7528\u4e8e\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5199\u5b8c\n            response.addHeader("Content-Length", "" + file.length());\n//                // \u524d\u7aef\u83b7\u53d6\u6587\u4ef6\u540d\uff0c\u9700\u8981\u89e3\u7801\n//                response.addHeader("downLoadName", URLEncoder.encode(fileName, "UTF-8"));\n            // \u5b9a\u4e49\u8f93\u51fa\u6d41\n            outputStream = new BufferedOutputStream(response.getOutputStream());\n            // \u5b9a\u4e49\u8f93\u51fa\u7c7b\u578b\u4e3a\u4e8c\u8fdb\u5236\u6d41\u8f93\u51fa\n            response.setContentType("application/octet-stream");\n            // \u628a\u6d41\u5199\u5165response\n            outputStream.write(buffer);\n            // flush\u843d\u76d8\n            outputStream.flush();\n            // \u5173\u95ed\u8f93\u51fa\u6d41\n            outputStream.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (fis != null) {\n                fis.close();\n            }\n            if (outputStream != null) {\n                outputStream.close();\n            }\n        }\n//            BufferedImage image = ImageIO.read(new File(filePath));\n//            ImageIO.write(image, "svg", response.getOutputStream());\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}\n')))}c.isMDXComponent=!0}}]);